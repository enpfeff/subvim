set macmeta
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set nowrap
set autoindent
let mapleader = ","
let NERDTreeShowHidden=1
set guifont=Meslo\ LG\ S\ for\ Powerline:h11

"Ignore these files
set wildignore+=*/.git/*,*/tmp/*,*/.hg/*,*/.svn/*,*/build/*,*/vendor/*,*/dist/*,*.css,*/node-modules/*,*/node_modules/*,*/bower_components/*,*/.sass-cache/*,*/.grunt/*

"Yankstack
nmap <M-p> <Plug>yankstack_substitute_older_paste
" nmap <D-P> <Plug>yankstack_substitute_newer_paste

"General key remaps
map <S-Tab> <C-W>
noremap <D-PageDown> :tabnext<CR>
noremap <D-PageUp> :tabprev<CR>
map <S-D-Right> vg_
map! <S-D-Right> <esc>vg_
map <S-D-Left> v^
map! <S-D-Left> <esc>v^
"Clear search once I'm done
nnoremap <esc><esc> :noh<cr>
"Enter and shift enter create new lines
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>
map <S-D-,> :hi Normal guibg=#052933<CR>
map <S-D-.> :hi Normal guibg=#2f2f2f<CR>
map <S-D-/> :hi Normal guibg=#241e29<CR>

"Take off the training wheels
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

"Autoload on vimrc edits
augroup myvimrc
    au!
    au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END

"Aireline
let g:airline_powerline_fonts=1
let g:airline#extensions#whitespace#enabled = 1

"CtrlP
let g:ctrlp_working_path_mode=2
" nmap <D-t> :CtrlP<cr>
" imap <D-t> <esc>:CtrlP<cr>


"Spellcheck
nmap <silent> <leader>s :set spell!<CR>
set spelllang=en_us
set lsp=0

"Surround
let g:surround_{char2nr("d")} = "<div\1id: \r..*\r id=\"&\"\1>\r</div>""
let g:surround_{char2nr("s")} = "<span\1class: \r..*\r class=\"&\"\1>\r</span>""

"Snippets
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsListSnippets="<D-.>"

"Syntastic
" let g:syntastic_enable_signs=0
" highlight SyntasticErrorLine guifg=white guibg=#6e3232
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': ['javascript', 'python', 'php', 'json', 'sass'],
                           \ 'passive_filetypes': ['html'] }

"Whitespace
highlight ExtraWhitespace ctermbg=black guibg=#181818

"Nerdtree
"highlight link NERDTreeExecFile ModeMsg

"Easygrep
let g:EasyGrepCommand=1
let g:EasyGrepRecursive=1
let g:EasyGrepFilesToExclude=".git,tmp,.hg,.svn,build,vendor,dist,*.css,node-modules,node_modules,bower_components,.sass-cache,.grunt"
let g:EasyGrepEveryMatch=1

"match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

"Remove whitespace on save
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction
autocmd BufWritePre     *.* :call TrimWhiteSpace()

"Use gh flavored markdown by default
augroup markdown
    au!
    au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END


nnoremap <F9> :call Wrap()<cr>

function! Wrap()
    if (&wrap == 1)
        set nowrap
    else
        set wrap
    endif
endfunction

"autocmd FileType html set ft=htmldjango
au BufNewFile,BufRead *.html setlocal ft=htmldjango
